# Environment Variables #

Key value pairs that **store configuration data for application**. The main purpose is **securely manage configuration data and sensitive information**.\
Used for **database connection strings**, **API endpoints**, **feature toggles** and **other application settings**.

## Use in AWS ##
**Services that allow env variables**: Lambda, ECS, Elastic Beanstalk, App Runner and several others;
**Benefits**: Simplifies configuration, enables separation of code and configuration and supports different environments (e.g. dev, stating, prod).

**Best Practices**
- Separate code and configuration;
- Version control of your environment variables;
- Environment-specific settings: for different scopes;
- Security: Do not store sensitive information, such as secrets or credentials, in environment variables;

# Secrets #
Securely storing, managing and rotating sensitive information, such as API keys, passwords and tokens to prevent unauthorized access, maintain compliance and mitigate risk of data breaches;
**AWS Secrets Manager**: Fully managed service for managing and rotating secrets in AWS applications, some features:
- Secure storage;
- Rotation;
- Integration: supported by AWS services, such as RDS, DocumentDB, Redshift and other AWS services;
- Auditing and monitoring

**Best Practices**
- Use it to store and manage secrets;
- Principle of least privilege for acessing secrets;
- Regularly rotate secrets;
- Monitor and audit;

**How to access Secrets in AWS apps**
- AWS SDKs and CLI
- IAM Roles
- AWS Systems Manager Parameter Store